Model Summary:
AlexNet(
  (last_layer): Linear(in_features=2048, out_features=36, bias=True)
  (conv1_way0): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (1): LeakyReLU(negative_slope=0.01)
    (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): LeakyReLU(negative_slope=0.01)
    (6): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (7): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (8): LeakyReLU(negative_slope=0.01)
    (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (11): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (12): LeakyReLU(negative_slope=0.01)
    (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2_way0): Sequential(
    (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (1): LeakyReLU(negative_slope=0.01)
    (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (4): LeakyReLU(negative_slope=0.01)
    (5): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (7): LeakyReLU(negative_slope=0.01)
    (8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (10): LeakyReLU(negative_slope=0.01)
    (11): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (14): LeakyReLU(negative_slope=0.01)
    (15): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dense1_way0): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=6272, out_features=1024, bias=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dense2_way0): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=2048, out_features=1024, bias=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv1_way1): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (1): LeakyReLU(negative_slope=0.01)
    (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (5): LeakyReLU(negative_slope=0.01)
    (6): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (7): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (8): LeakyReLU(negative_slope=0.01)
    (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (11): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (12): LeakyReLU(negative_slope=0.01)
    (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2_way1): Sequential(
    (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (1): LeakyReLU(negative_slope=0.01)
    (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (4): LeakyReLU(negative_slope=0.01)
    (5): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (7): LeakyReLU(negative_slope=0.01)
    (8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (10): LeakyReLU(negative_slope=0.01)
    (11): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=same)
    (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (14): LeakyReLU(negative_slope=0.01)
    (15): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dense1_way1): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=6272, out_features=1024, bias=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dense2_way1): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=2048, out_features=1024, bias=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)
Device used for training: cuda:0
Size of training set: 27000
Size of validation set: 3000
---1 EPOCHS FINISHED---
Plugin messages for epoch 1:
TRAIN: 0.23796296296296296	VAL: 0.21233333333333335
---2 EPOCHS FINISHED---
Plugin messages for epoch 2:
TRAIN: 0.8022222222222222	VAL: 0.7486666666666667
---3 EPOCHS FINISHED---
Plugin messages for epoch 3:
TRAIN: 0.8651481481481481	VAL: 0.815
---4 EPOCHS FINISHED---
Plugin messages for epoch 4:
TRAIN: 0.9185185185185185	VAL: 0.8703333333333333
---5 EPOCHS FINISHED---
Plugin messages for epoch 5:
TRAIN: 0.9365555555555556	VAL: 0.884
---6 EPOCHS FINISHED---
Plugin messages for epoch 6:
TRAIN: 0.8685185185185185	VAL: 0.812
---7 EPOCHS FINISHED---
Plugin messages for epoch 7:
TRAIN: 0.9771851851851852	VAL: 0.9236666666666666
---8 EPOCHS FINISHED---
Plugin messages for epoch 8:
TRAIN: 0.9707037037037037	VAL: 0.9093333333333333
---9 EPOCHS FINISHED---
Plugin messages for epoch 9:
TRAIN: 0.9869629629629629	VAL: 0.9286666666666666
---10 EPOCHS FINISHED---
Plugin messages for epoch 10:
TRAIN: 0.9917777777777778	VAL: 0.9346666666666666
---11 EPOCHS FINISHED---
Plugin messages for epoch 11:
TRAIN: 0.8634444444444445	VAL: 0.8063333333333333
---12 EPOCHS FINISHED---
Plugin messages for epoch 12:
TRAIN: 0.9941111111111111	VAL: 0.934
---13 EPOCHS FINISHED---
Plugin messages for epoch 13:
TRAIN: 0.9899629629629629	VAL: 0.926
---14 EPOCHS FINISHED---
Plugin messages for epoch 14:
TRAIN: 0.9947777777777778	VAL: 0.9423333333333334
---15 EPOCHS FINISHED---
Plugin messages for epoch 15:
TRAIN: 0.9935185185185185	VAL: 0.935
---16 EPOCHS FINISHED---
Plugin messages for epoch 16:
TRAIN: 0.9972962962962963	VAL: 0.9423333333333334
---17 EPOCHS FINISHED---
Plugin messages for epoch 17:
TRAIN: 0.9967037037037038	VAL: 0.946
---18 EPOCHS FINISHED---
Plugin messages for epoch 18:
TRAIN: 0.9983333333333333	VAL: 0.946
---19 EPOCHS FINISHED---
Plugin messages for epoch 19:
TRAIN: 0.9975185185185185	VAL: 0.9443333333333334
---20 EPOCHS FINISHED---
Plugin messages for epoch 20:
TRAIN: 0.9970740740740741	VAL: 0.949
---21 EPOCHS FINISHED---
Plugin messages for epoch 21:
TRAIN: 0.9966296296296296	VAL: 0.9436666666666667
---22 EPOCHS FINISHED---
Plugin messages for epoch 22:
TRAIN: 0.9984074074074074	VAL: 0.946
---23 EPOCHS FINISHED---
Plugin messages for epoch 23:
TRAIN: 0.9952962962962963	VAL: 0.9366666666666666
---24 EPOCHS FINISHED---
Plugin messages for epoch 24:
TRAIN: 0.9993333333333333	VAL: 0.9473333333333334
---25 EPOCHS FINISHED---
Plugin messages for epoch 25:
TRAIN: 0.9981851851851852	VAL: 0.9503333333333334
---26 EPOCHS FINISHED---
Plugin messages for epoch 26:
TRAIN: 0.9985185185185185	VAL: 0.9446666666666667
---27 EPOCHS FINISHED---
Plugin messages for epoch 27:
TRAIN: 0.9979259259259259	VAL: 0.9466666666666667
---28 EPOCHS FINISHED---
Plugin messages for epoch 28:
TRAIN: 0.9986666666666667	VAL: 0.945
---29 EPOCHS FINISHED---
Plugin messages for epoch 29:
TRAIN: 0.9989629629629629	VAL: 0.9496666666666667
---30 EPOCHS FINISHED---
Plugin messages for epoch 30:
TRAIN: 0.9993333333333333	VAL: 0.9546666666666667
